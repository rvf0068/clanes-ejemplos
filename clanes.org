#+title: Ejemplos de gráficas de clanes
#+property: header-args:jupyter-python :exports both :cache yes :session clanes-ejemplos :results raw drawer
#+startup: inlineimages

Vamos a usar la biblioteca [[https://networkx.org/][Networkx]], que es la biblioteca usual de Python para trabajar con gráficas, y con [[https://github.com/rvf0068/pycliques][pycliques]], que es una extensión de Networkx que estoy escribiendo para trabajar con clanes en gráficas.

#+begin_src jupyter-python
import networkx as nx
import matplotlib.pyplot as plt

from pycliques.cliques import clique_graph as k
from pycliques.helly import is_clique_helly, is_hereditary_clique_helly
from pycliques.dominated import completely_pared_graph, complete_s_collapse, complete_s_collapse_edges
from pycliques.simplicial import clique_complex
p = completely_pared_graph
#+end_src

#+RESULTS[647bf4fbbddfa4fe0f13417775dc610e814c1eeb]:

En Networkx podemos obtener gráficas aleatorias.

#+begin_src jupyter-python :results value file
g = nx.gnp_random_graph(15, 0.7)
nx.draw(g, with_labels=True)
#+end_src

#+RESULTS[3bca591ffc100dcf02eb860fb107abfd9221dbfd]:
[[file:./.ob-jupyter/98023671f5d6f863f555e010cd56603d05dfcf4b.png]]


#+begin_src jupyter-python
kg = k(g)
k2g = k(kg)
k3g = k(k2g)
kg.order(), k2g.order(), k3g.order()
#+end_src

#+RESULTS[5e0792d4b51e9d86c3f7a914a121e0ed52fb1d3b]:
| 25 | 51 | 780 |


Decimos que una colección \(\mathcal{C}=\{X_{i}\}\) de subconjuntos de un conjunto \(X\) es *intersecante* si para todos \(i\ne i'\) se tiene que \(X_{i}\cap X_{i'}\ne\emptyset\). Decimos que la colección \(\mathcal{C}\) tiene la *propiedad de Helly* si toda subcolección intersecante \(\mathcal{C}'\subseteq \mathcal{C}\) es tal que \(\cap \mathcal{C}'\ne\emptyset\). Decimos que una gráfica \(G\) es *clan Helly* si la colección de sus clanes tiene la propiedad de Helly.

#+begin_src jupyter-python
is_clique_helly(g), is_clique_helly(kg), is_clique_helly(k2g)
#+end_src

#+RESULTS[84a318cf691da1915197d9f0a6625ff3fdc4debc]:
| False | False | False |

- Un vértice \(x\) en \(G\) es /dominado/ si existe \(y\in V(G)\), \(y\ne x\) tal que \(z\sim x\) implica \(z\sim y\).
- (Prisner, 1992) Si \(x\in V(G)\) es dominado, \(G-x\simeq G\).
- La gráfica *podada* es una gráfica \(P(G)\) que resulta de \(G\) eliminando ciertos vértices dominados. Se puede demostrar (Frías Armenta, Neumann-Lara, Pizaña, 2004) que \(G\) y \(P(G)\) tienen el mismo comportamiento.

#+begin_src jupyter-python
pg = p(g)
pg.order()
#+end_src

#+RESULTS:
: 6

#+begin_src jupyter-python
nx.draw(pg)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/a2f2de6e03b5ae110a1eb13381803db0cd6dfab5.png]]

* COMMENT Local Variables

# Local Variables:
# org-confirm-babel-evaluate: nil
# ispell-local-dictionary: "castellano"
# End:
